#!/bin/bash

# Quick Restart - One-liner restart
echo "🔄 Quick restarting services..."

# Get the directory of this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Load configuration from config.env
if [ -f "$SCRIPT_DIR/config.env" ]; then
    source "$SCRIPT_DIR/config.env"
else
    echo "❌ config.env not found!"
    exit 1
fi

# Get MQTT ports from centralized config
ESP32_MQTT_PORT=$(python3 -c "from config_parser import get_esp32_port; print(get_esp32_port())")
NEMO_MQTT_PORT=$(python3 -c "from config_parser import get_nemo_port; print(get_nemo_port())")

# Kill all NEMO-related processes to avoid conflicts
echo "🛑 Stopping all NEMO-related processes..."
pkill -f "python.*main\.py" 2>/dev/null
pkill -f "python.*manage\.py" 2>/dev/null
pkill -f "python.*nemo" 2>/dev/null
pkill -f "mosquitto.*mqtt/config/mosquitto.conf" 2>/dev/null
pkill -f "mosquitto_sub" 2>/dev/null

# Kill any remaining processes using the MQTT ports
echo "🔌 Closing MQTT ports..."
for port in 1883 $NEMO_MQTT_PORT 8883 9001; do
    if lsof -ti :$port > /dev/null 2>&1; then
        echo "  Killing processes on port $port..."
        lsof -ti :$port | xargs kill -9 2>/dev/null || true
    fi
done

# Wait a moment
sleep 2

# Generate mosquitto.conf dynamically
cd /Users/adenton/Desktop/NEMO-Tool-Display/vm_server
echo "📝 Generating mosquitto configuration..."
mkdir -p mqtt/config
cat > mqtt/config/mosquitto.conf << EOF
# Mosquitto MQTT Broker Configuration for NEMO Tool Display
# Auto-generated by quick_restart.sh from config.env

# General settings
persistence true
persistence_location /Users/adenton/Desktop/NEMO-Tool-Display/vm_server/mqtt/data/
log_dest file /Users/adenton/Desktop/NEMO-Tool-Display/vm_server/mqtt/log/mosquitto.log
log_type error
log_type warning
log_type notice
log_type information

# Network settings - Non-SSL listener for NEMO publisher (dev only)
listener $NEMO_MQTT_PORT
protocol mqtt
allow_anonymous true

# ESP32 listener - standard MQTT port
listener $ESP32_MQTT_PORT
protocol mqtt
allow_anonymous true

# WebSocket support (optional)
listener 9001
protocol websockets
allow_anonymous true

# Connection settings
max_connections 100
max_inflight_messages 20
max_queued_messages 100

# Message settings
max_packet_size 268435456
max_topic_alias 10
EOF

# Start MQTT broker
echo "🚀 Starting MQTT broker on ports $NEMO_MQTT_PORT (NEMO) and $ESP32_MQTT_PORT (ESP32s)..."
mosquitto -c mqtt/config/mosquitto.conf -d
sleep 3

# Check if MQTT broker is running
echo "🔍 Checking MQTT broker status..."
if pgrep -f "mosquitto.*mqtt/config/mosquitto.conf" > /dev/null; then
    echo "✅ MQTT broker is running"
    
    # Check if NEMO port is listening
    if lsof -i :$NEMO_MQTT_PORT > /dev/null 2>&1; then
        echo "✅ Port $NEMO_MQTT_PORT (NEMO) is listening"
    else
        echo "❌ Port $NEMO_MQTT_PORT (NEMO) is not listening"
    fi
    
    # Check if ESP32 port is listening
    if lsof -i :$ESP32_MQTT_PORT > /dev/null 2>&1; then
        echo "✅ Port $ESP32_MQTT_PORT (ESP32s) is listening"
    else
        echo "❌ Port $ESP32_MQTT_PORT (ESP32s) is not listening"
    fi
else
    echo "❌ MQTT broker failed to start"
    exit 1
fi

# Start NEMO server with venv
echo "🚀 Starting NEMO server..."
source venv/bin/activate && python3 main.py &
NEMO_PID=$!

# Wait a moment for NEMO server to start
sleep 5

# Check if NEMO server is running
echo "🔍 Checking NEMO server status..."
if kill -0 $NEMO_PID 2>/dev/null; then
    echo "✅ NEMO server is running (PID: $NEMO_PID)"
    
    # Check if NEMO server connected to MQTT
    echo "🔍 Checking MQTT connection..."
    sleep 2
    
    # Look for connection success in the logs
    if tail -n 20 nemo_server.log 2>/dev/null | grep -q "Both MQTT clients connected successfully"; then
        echo "✅ NEMO server connected to MQTT broker"
    else
        echo "⚠️  NEMO server may not have connected to MQTT yet"
        echo "📋 Recent NEMO server logs:"
        tail -n 10 nemo_server.log 2>/dev/null || echo "No log file found"
    fi
else
    echo "❌ NEMO server failed to start"
    exit 1
fi

echo ""
echo "✅ Services restarted successfully!"
echo "📊 Check status with: ./quick_mqtt_check.sh"
echo "📋 Monitor MQTT with: python3 mqtt_monitor.py"
echo "📋 View NEMO logs with: tail -f nemo_server.log"
